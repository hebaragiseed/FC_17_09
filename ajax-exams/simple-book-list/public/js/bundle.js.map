{"version":3,"sources":["webpack:///webpack/bootstrap a8f07292fdb8f427edc7","webpack:///./src/js/main.js","webpack:///./src/js/ajax.js","webpack:///./src/sass/style.scss"],"names":["BookList","url","books","document","querySelector","innerHTML","map","id","title","author","price","editable","makeHtmlTableRow","join","get","then","JSON","parse","console","log","bindBooksToDom","getElementById","addEventListener","push","lastBookId","status","e","target","nodeName","targetId","dataset","item","type","forEach","book","targetRowInputs","querySelectorAll","inputTitle","value","trim","placeholder","focus","input","name","post","res","put","newBook","filter","targetBook","delete","length","Math","max","isEditable","toLocaleString","bookList","init","eventProcess","Ajax","Promise","resolve","reject","req","XMLHttpRequest","open","send","onreadystatechange","readyState","DONE","response","statusText","data","setRequestHeader","stringify"],"mappings":"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","file":"js/bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap a8f07292fdb8f427edc7","import Ajax from './ajax';\n\n// BookList View Controller\nclass BookList {\n  constructor() {\n    this.url = '/books';\n    this.books = [];\n  }\n\n  // books 객체의 마지막 id에 1을 더한 값 취득\n  get lastBookId() {\n    return !this.books.length ? 1 : Math.max(...this.books.map(({ id }) => id)) + 1;\n  }\n\n  // If a class method does not use this, it can safely be made a static function.\n  static makeHtmlTableRow({ id, title, author, price, editable }) {\n    let res = '';\n    // editable의 값이 'true'인 경우, true로 변경\n    const isEditable = editable || (editable === 'true');\n\n    // [true, 'true', false, 'false'].forEach(editable => {\n    //   // const isEditable = (editable === true) || (editable === 'true'); // OK\n    //   const isEditable = editable || (editable === 'true'); // OK\n    //   // const isEditable = (editable === 'true'); // NG\n    //   // const isEditable = (editable == 'true'); // NG\n    //   console.log(isEditable);\n    // });\n\n    if (isEditable) {\n      res = `<tr class=\"row-${id}\">\n        <th>${id}</th>\n        <td><input type=\"text\" class=\"form-control\" name=\"title\" value=\"${title}\"></td>\n        <td><input type=\"text\" class=\"form-control\" name=\"author\" value=\"${author}\"></td>\n        <td><input type=\"text\" class=\"form-control\" name=\"price\" value=\"${price}\"></td>\n        <td>\n          <div class=\"btn-group\" role=\"group\">\n            <button type=\"button\" class=\"btn btn-default\" data-item=\"${id}\" data-type=\"save\">\n              <i class=\"fa fa-check\" aria-hidden=\"true\"></i>\n            </button>\n            <button type=\"button\" class=\"btn btn-default\" data-item=\"${id}\" data-type=\"cancel\">\n              <i class=\"fa fa-ban\" aria-hidden=\"true\"></i>\n            </button>\n            <button type=\"button\" class=\"btn btn-default\" data-item=\"${id}\" data-type=\"delete\">\n              <i class=\"fa fa-trash-o\" aria-hidden=\"true\"></i>\n            </button>\n          </div>\n        </td>\n      </tr>`;\n    } else {\n      res = `<tr class=\"row-${id}\">\n        <th>${id}</th>\n        <td>${title}</td>\n        <td>${author}</td>\n        <td>${(price * 1).toLocaleString()}</td>\n        <td>\n          <div class=\"btn-group\" role=\"group\">\n            <button type=\"button\" class=\"btn btn-default\" data-item=\"${id}\" data-type=\"edit\">\n              <i class=\"fa fa-pencil\" aria-hidden=\"true\"></i>\n            </button>\n            <button type=\"button\" class=\"btn btn-default\" data-item=\"${id}\" data-type=\"delete\">\n              <i class=\"fa fa-trash-o\" aria-hidden=\"true\"></i>\n            </button>\n          </div>\n        </td>\n      </tr>`;\n    }\n    return res;\n  }\n\n  bindBooksToDom() {\n    document.querySelector('tbody').innerHTML = this.books.map(({ id, title, author, price, editable }) => BookList.makeHtmlTableRow({ id, title, author, price, editable })).join('');\n  }\n\n  // bookList view 초기화\n  init() {\n    Ajax.get(this.url)\n      .then(books => {\n        this.books = JSON.parse(books);\n        console.log('[GET]', this.books);\n        this.bindBooksToDom();\n      });\n  }\n\n  eventProcess() {\n    // Add 버튼 이벤트 핸들러\n    // books 배열에 내용이 비어 있는 새로운 book 객체를 추가한다\n    document.getElementById('add').addEventListener('click', () => {\n      // books 객체에 새로운 book 추가\n      this.books.push({\n        id: this.lastBookId,\n        title: '',\n        author: '',\n        price: '',\n        status: 'new',\n        editable: true\n      });\n\n      this.bindBooksToDom();\n      console.log('[ADD]', this.books);\n    });\n\n    // edit / save / delete 버튼 이벤트 핸들러\n    document.querySelector('tbody').addEventListener('click', e => {\n      // 이벤트 타킷이 edit / save / delete 버튼이 아니면 처리 종료\n      if (!e.target || e.target.nodeName !== 'BUTTON') return;\n\n      // 이벤트를 발생시킨 버튼이 소속된 book의 id\n      const targetId = e.target.dataset.item * 1;\n      // 이벤트를 발생시킨 버튼의 타입 (edit / save / delete)\n      const { type } = e.target.dataset;\n\n      switch (type) {\n        // edit 버튼 이벤트 핸들러\n        case 'edit': {\n          this.books.forEach(book => {\n            if (book.id === targetId) {\n              book.editable = true;\n              book.status = 'edited';\n            }\n          });\n\n          this.bindBooksToDom();\n          console.log(`[EDIT: ${targetId}]`, this.books);\n          break;\n        }\n        // save 버튼 이벤트 핸들러\n        case 'save': {\n          // save 대상 row에서 input data 취득\n          const targetRowInputs = document.querySelectorAll(`.row-${targetId} input[type=text]`);\n          const inputTitle = targetRowInputs[0];\n          // 공백 제거\n          inputTitle.value = inputTitle.value.trim();\n\n          if (!inputTitle.value) {\n            inputTitle.placeholder = '책 제목을 입력하세요.';\n            inputTitle.focus();\n            // return alert('책 제목을 입력하세요.');\n            return;\n          }\n\n          // save 대상 row에서 사용자 입력 데이터를 취득하여 books 배열에 반영\n          this.books.forEach(book => {\n            if (book.id === targetId) {\n              // input의 name을 key로 input의 value를 값으로 book 객체 생성\n              [...targetRowInputs].forEach(input => {\n                book[input.name] = input.value;\n              });\n              book.editable = false;\n\n              // book 객체를 DB에 반영\n              if (book.status === 'new') {\n                // book status가 new(신규추가)이면 DB에 POST\n                console.log(`[SAVE/NEW: ${targetId}]`, book);\n                book.status = '';\n\n                Ajax.post(this.url, book)\n                  .then(res => {\n                    console.log('[POST]', res);\n                    return Ajax.get(this.url);\n                  })\n                  .then(books => {\n                    this.books = JSON.parse(books);\n                    console.log('[GET]', this.books);\n                    this.bindBooksToDom();\n                  });\n              } else if (book.status === 'edited') {\n                // book status가 eidt(수정)이면 DB에 PUT\n                console.log(`[SAVE/EDIT: ${targetId}]`, book);\n                book.status = '';\n\n                Ajax.put(this.url, book.id, book)\n                  .then(newBook => {\n                    console.log('[PUT]', newBook);\n                    return Ajax.get(this.url);\n                  })\n                  .then(books => {\n                    this.books = JSON.parse(books);\n                    console.log('[GET]', this.books);\n                    this.bindBooksToDom();\n                  });\n              }\n            }\n          });\n          break;\n        }\n        // cancel 버튼 이벤트 핸들러\n        case 'cancel': {\n          const [targetBook] = this.books.filter(book => book.id === targetId);\n\n          if (targetBook.status === 'new') {\n            // Add 버튼으로 추가된 항목(DB 미반영)에 대한 입력이 취소되면 대상 항목 삭제\n            this.books = this.books.filter(book => book.id !== targetId);\n          } else {\n            // 기존 항목(DB 반영)에 대한 입력이 취소되면 editable 취소\n            this.books.forEach(book => {\n              if (book.id === targetId) {\n                book.editable = false;\n                book.status = '';\n              }\n            });\n          }\n\n          this.bindBooksToDom();\n          console.log(`[CANCEL: ${targetId}]`, this.books);\n          break;\n        }\n        // delete 버튼 이벤트 핸들러\n        case 'delete': {\n          Ajax.delete(this.url, targetId)\n            .then(() => {\n              console.log('[DEL]', targetId);\n              return Ajax.get(this.url);\n            })\n            .then(books => {\n              this.books = JSON.parse(books);\n              console.log('[GET]', this.books);\n              this.bindBooksToDom();\n            });\n          break;\n        }\n        default:\n          break;\n      }\n    });\n  }\n}\n\nconst bookList = new BookList();\n\n// bookList view 초기화\nbookList.init();\n\n// bookList view event handlers\nbookList.eventProcess();\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/main.js","export default class Ajax {\n  static get(url) {\n    return new Promise((resolve, reject) => {\n      const req = new XMLHttpRequest();\n      req.open('GET', url);\n      req.send();\n\n      req.onreadystatechange = function () {\n        if (req.readyState === XMLHttpRequest.DONE) {\n          if (req.status === 200) resolve(req.response);\n          else reject(req.statusText);\n        }\n      };\n    });\n  }\n\n  static post(url, data) {\n    return new Promise((resolve, reject) => {\n      const req = new XMLHttpRequest();\n      req.open('POST', url);\n      // 서버로 전송하는 데이터의 mime type 설정\n      req.setRequestHeader('Content-type', 'application/json');\n      req.send(JSON.stringify(data));\n      // req.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');\n      // // escaping untrusted data\n      // req.send(Object.keys(data).map(key => `${key}=${encodeURIComponent(data[key])}`).join('&'));\n\n      req.onreadystatechange = function () {\n        if (req.readyState === XMLHttpRequest.DONE) {\n          if (req.status === 200) resolve(req.response);\n          else reject(req.statusText);\n        }\n      };\n    });\n  }\n\n  static put(url, id, data) {\n    return new Promise((resolve, reject) => {\n      const req = new XMLHttpRequest();\n      req.open('PUT', `${url}/${id}`);\n      // 서버로 전송하는 데이터의 mime type 설정\n      req.setRequestHeader('Content-type', 'application/json');\n      req.send(JSON.stringify(data));\n\n      req.onreadystatechange = function () {\n        if (req.readyState === XMLHttpRequest.DONE) {\n          if (req.status === 200) resolve(req.response);\n          else reject(req.statusText);\n        }\n      };\n    });\n  }\n\n  static delete(url, id) {\n    return new Promise((resolve, reject) => {\n      const req = new XMLHttpRequest();\n      req.open('DELETE', `${url}/${id}`);\n      req.send();\n\n      req.onreadystatechange = function () {\n        if (req.readyState === XMLHttpRequest.DONE) {\n          if (req.status === 200) resolve(req.response);\n          else reject(req.statusText);\n        }\n      };\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/ajax.js","// removed by extract-text-webpack-plugin\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/sass/style.scss\n// module id = 3\n// module chunks = 0"],"sourceRoot":""}